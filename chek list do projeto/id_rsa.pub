episodio 3 

passo 3 - primeira requisição ao backend

3.1 Instalar Axios
	yarn add axios
3.2Definir BASE_URL
	pasta utils
	arquivo requets.ts -> export const BASE_URL = 'http://localhost:8080';

3.3 Definir tipo SaleSum
	pasta types
	arquivo sale.ts 

export type SaleSum =  {
    sellerName: string,
    sum: number
}

3.4 Definir tipo local ChartData em DonutChart
	dentro do arquivo index.tsx da pasta donuchart(grafico de rosca):

type ChartData = {
    labels: string [];
    series: number [];
}

3.5 Fazer a requisição e tratar os dados
	dentro do arquivo index.tsx da pasta donuchart(grafico de rosca):

 let chartData : ChartData = {labels:[], series: []};

   axios.get(`${BASE_URL}/sales/amount-by-seller`)
   
   .then(response =>{
    const data = response.data as SaleSum[];
    const myLabels = data.map(x => x.sellerName);
    const mySeries = data.map(x => x.sum);

    chartData = {labels:myLabels, series: mySeries};

    console.log(chartData);

   })


passo 4 - intregação com o grafico de rosca(DonutChart): 
	4.1 uso correto atraves do useState e useEffect:


 const [chartData, setChartData] = useState<ChartData>({ labels: [], series: [] });


    useEffect(() => {

        axios.get(`${BASE_URL}/sales/amount-by-seller`)
            .then(response => {
                const data = response.data as SaleSum[];
                const myLabels = data.map(x => x.sellerName);
                const mySeries = data.map(x => x.sum);

                setChartData({ labels: myLabels, series: mySeries });

               

            });

    },[]);	